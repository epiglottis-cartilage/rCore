//! Loading user applications into memory

// This file is generated by `build.rs`
include!("app.rs");

/// Get the total number of applications.
#[inline(always)]
pub fn app_number() -> usize {
    APP.len()
}

/// get applications data
pub fn get_app_data(app_id: usize) -> &'static [u8] {
    use crate::label::app_address;
    log::info!("loading app[{}] : {}", app_id, APP[app_id]);
    let app_start = unsafe {
        core::slice::from_raw_parts(app_address as usize as *const usize, app_number() + 1)
    };
    assert!(app_id < app_number());
    unsafe {
        core::slice::from_raw_parts(
            app_start[app_id] as *const u8,
            app_start[app_id + 1] - app_start[app_id],
        )
    }
}

#[allow(unused)]
///get app data from name
pub fn get_app_data_by_name(name: &str) -> Option<&'static [u8]> {
    APP.binary_search(&name).ok().map(get_app_data)
}
///list all apps
pub fn list_apps() {
    println!("/**** APPS ****");
    println!("{:#?}", APP);
    println!("**************/");
}
